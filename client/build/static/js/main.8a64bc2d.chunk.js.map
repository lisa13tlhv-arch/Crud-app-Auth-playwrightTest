{"version":3,"sources":["components/loader.js","constants/userConstanst.js","shared/baseURL.js","config.js","components/createNewPassword.js","actions/userAction.js","constants/todoConstant.js","components/dashboard.js","actions/todoAction.js","components/forgotpassword.js","components/login.js","components/register.js","App.js","store.js","reducer/userReducer.js","reducer/todoReducer.js","index.js"],"names":["Loader","Spinner","animation","role","style","margin","display","color","className","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","PASSWORD_RESET_LINK_REQUEST","PASSWORD_RESET_LINK_SUCCESS","PASSWORD_RESET_LINK_FAIL","PASSWORD_RESET_LINK_RESET","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","RESET_PASSWORD_RESET","baseURL","axiosInstance","axios","create","CreateNewPassword","match","dispatch","useDispatch","useState","newPass","setNewPass","conPass","setConPass","token","params","passReset","useSelector","state","loading","error","message","useEffect","Container","Row","Col","md","border","Form","Group","Label","Control","type","placeholder","value","onChange","e","target","Button","onClick","a","config","headers","post","data","payload","status","response","resetPassword","to","variant","Alert","GET_ALL_TODOS_REQUEST","GET_ALL_TODOS_SUCCESS","GET_ALL_TODOS_FAIL","ADD_NEW_TODO_REQUEST","ADD_NEW_TODO_SUCCESS","ADD_NEW_TODO_FAIL","TODO_COMPLETE_REQUEST","TODO_COMPLETE_SUCCESS","TODO_COMPLETE_FAIL","TODO_COMPLETE_RESET","TODO_INCOMPLETE_REQUEST","TODO_INCOMPLETE_SUCCESS","TODO_INCOMPLETE_FAIL","TODO_INCOMPLETE_RESET","TODO_DELETE","TODO_DELETE_FAIL","TODO_DELETE_RESET","TODO_UPDATE_REQUEST","TODO_UPDATE_SUCCESS","TODO_UPDATE_FAIL","TODO_UPDATE_RESET","Dashboard","history","title","setTitle","desc","setDesc","todoId","setTodoId","updateTitle","setupdateTitle","updateDesc","setupdateDesc","show","setShow","userInfo","userLogin","todoItems","loadingItems","errorItems","todos","addTodoItem","loadingAddTodo","errorAddTodo","successAddTodo","success","completeSuccess","todoComplete","incompleteSuccess","todoInComplete","deleteSuccess","todoDelete","editSuccess","todoEdit","push","getState","Authorization","get","completeHandler","id","fetch","method","then","res","catch","err","completeTodo","incompleteHandler","incompleteTodo","deleteHandler","delete","deleteTodo","handleShow","forEach","d","_id","description","findTodoItem","backgroundColor","email","localStorage","removeItem","as","row","addNewTodo","width","scope","textAlign","map","todo","done","disabled","length","Modal","onHide","centered","Header","closeButton","Title","Body","Footer","put","editTodo","ForgotPassword","setEmail","passResetLink","getResetPasswordLink","Login","password","setPassword","setItem","JSON","stringify","loginUser","Register","userRegister","registerUser","App","path","exact","component","initialState","getItem","parse","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a64bc2d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        margin: 'auto',\r\n        display: 'block',\r\n        color: '#4caf50',\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading ...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\r\n\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGIN_RESET = 'USER_LOGIN_RESET';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const PASSWORD_RESET_LINK_REQUEST = 'PASSWORD_RESET_LINK_REQUEST';\r\nexport const PASSWORD_RESET_LINK_SUCCESS = 'PASSWORD_RESET_LINK_SUCCESS';\r\nexport const PASSWORD_RESET_LINK_FAIL = 'PASSWORD_RESET_LINK_FAIL';\r\nexport const PASSWORD_RESET_LINK_RESET = 'PASSWORD_RESET_LINK_RESET';\r\n\r\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const RESET_PASSWORD_RESET = 'RESET_PASSWORD_RESET';\r\n","export const baseURL = 'https://crud-app-login.herokuapp.com';\r\n","import axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: \"https://crud-app-login.herokuapp.com\"\r\n})","import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Loader from './loader';\r\nimport { resetPassword } from '../actions/userAction';\r\n\r\nconst CreateNewPassword = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [newPass, setNewPass] = useState('');\r\n  const [conPass, setConPass] = useState('');\r\n\r\n  const token = match.params.token;\r\n\r\n  const passReset = useSelector((state) => state.passReset);\r\n  const { loading, error, message } = passReset;\r\n\r\n  useEffect(() => {}, [dispatch]);\r\n\r\n  const resetPasswordHandler = () => {\r\n    dispatch(resetPassword(token, newPass, conPass));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-5 justify-content-center\">\r\n        <Col md={4} className=\"m-3 p-3\" style={{ border: '1px solid #ddd' }}>\r\n          <Form>\r\n            <h2>Reset Password</h2>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Create new password\"\r\n                value={newPass}\r\n                onChange={(e) => setNewPass(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Retype new password\"\r\n                value={conPass}\r\n                onChange={(e) => setConPass(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button\r\n              onClick={resetPasswordHandler}\r\n              className=\"btn-block btn-warning\"\r\n            >\r\n              RESET\r\n            </Button>\r\n          </Form>\r\n          <LinkContainer className=\"mt-3\" to=\"/login\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-block\"\r\n              variant=\"outline-secondary\"\r\n            >\r\n              Back to Login\r\n            </Button>\r\n          </LinkContainer>\r\n          <Row className=\"mt-3\">\r\n            <Col>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Alert variant=\"danger\">\r\n                  <i className=\"fas fa-exclamation-triangle\"></i>\r\n                  {error}\r\n                </Alert>\r\n              ) : (\r\n                message && <Alert variant=\"success\">{message}</Alert>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateNewPassword;\r\n","//import axios from 'axios';                // Useraction.js\r\nimport {\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  PASSWORD_RESET_LINK_REQUEST,\r\n  PASSWORD_RESET_LINK_FAIL,\r\n  PASSWORD_RESET_LINK_SUCCESS,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n  RESET_PASSWORD_REQUEST,\r\n} from '../constants/userConstanst';\r\nimport { baseURL } from '../shared/baseURL';\r\nimport {axiosInstance} from '../config';\r\n\r\nexport const registerUser = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axiosInstance.post(\r\n      `/api/users/register`,\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axiosInstance.post(\r\n      `/api/users/login`,\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    if (email) localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGOUT,\r\n    });\r\n    localStorage.removeItem('userInfo');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGOUT,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getResetPasswordLink = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PASSWORD_RESET_LINK_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axiosInstance.post(\r\n      `/api/users/getResetPasswordLink`,\r\n      { email },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: PASSWORD_RESET_LINK_SUCCESS,\r\n      payload: data.message,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_LINK_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (token, newPass, conPass) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axiosInstance.post(\r\n      `/api/users/resetPassword/${token}`,\r\n      { newPass, conPass },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: RESET_PASSWORD_SUCCESS,\r\n      payload: data.status,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: RESET_PASSWORD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","export const GET_ALL_TODOS_REQUEST = 'GET_ALL_TODOS_REQUEST';\r\nexport const GET_ALL_TODOS_SUCCESS = 'GET_ALL_TODOS_SUCCESS';\r\nexport const GET_ALL_TODOS_FAIL = 'GET_ALL_TODOS_FAIL';\r\n\r\nexport const ADD_NEW_TODO_REQUEST = 'ADD_NEW_TODO_REQUEST';\r\nexport const ADD_NEW_TODO_SUCCESS = 'ADD_NEW_TODO_SUCCESS';\r\nexport const ADD_NEW_TODO_FAIL = 'ADD_NEW_TODO_FAIL';\r\n\r\nexport const TODO_COMPLETE_REQUEST = 'TODO_COMPLETE_REQUEST';\r\nexport const TODO_COMPLETE_SUCCESS = 'TODO_COMPLETE_SUCCESS';\r\nexport const TODO_COMPLETE_FAIL = 'TODO_COMPLETE_FAIL';\r\nexport const TODO_COMPLETE_RESET = 'TODO_COMPLETE_RESET';\r\n\r\nexport const TODO_INCOMPLETE_REQUEST = 'TODO_INCOMPLETE_SUCCESS';\r\nexport const TODO_INCOMPLETE_SUCCESS = 'TODO_INCOMPLETE_REQUEST';\r\nexport const TODO_INCOMPLETE_FAIL = 'TODO_INCOMPLETE_FAIL';\r\nexport const TODO_INCOMPLETE_RESET = 'TODO_INCOMPLETE_RESET';\r\n\r\nexport const TODO_DELETE = 'TODO_DELETE';\r\nexport const TODO_DELETE_FAIL = 'TODO_DELETE_FAIL';\r\nexport const TODO_DELETE_RESET = 'TODO_DELETE_RESET';\r\n\r\nexport const TODO_UPDATE_REQUEST = 'TODO_UPDATE_REQUEST';\r\nexport const TODO_UPDATE_SUCCESS = 'TODO_UPDATE_SUCCESS';\r\nexport const TODO_UPDATE_FAIL = 'TODO_UPDATE_FAIL';\r\nexport const TODO_UPDATE_RESET = 'TODO_UPDATE_RESET';\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Modal,\r\n  Row,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from '../actions/userAction';\r\nimport {\r\n  getAllTodos,\r\n  addNewTodo,\r\n  completeTodo,\r\n  incompleteTodo,\r\n  deleteTodo,\r\n  editTodo,\r\n} from '../actions/todoAction';\r\nimport Loader from './loader';\r\nimport {\r\n  TODO_COMPLETE_RESET,\r\n  TODO_DELETE_RESET,\r\n  TODO_INCOMPLETE_RESET,\r\n  TODO_UPDATE_RESET,\r\n} from '../constants/todoConstant';\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  const [todoId, setTodoId] = useState('');\r\n  const [updateTitle, setupdateTitle] = useState('');\r\n  const [updateDesc, setupdateDesc] = useState('');\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const todoItems = useSelector((state) => state.todoItems);\r\n  const { loading: loadingItems, error: errorItems, todos } = todoItems;\r\n\r\n  const addTodoItem = useSelector((state) => state.addTodoItem);\r\n  const {\r\n    loading: loadingAddTodo,\r\n    error: errorAddTodo,\r\n    success: successAddTodo,\r\n  } = addTodoItem;\r\n\r\n  const todoComplete = useSelector((state) => state.todoComplete);\r\n  const { success: completeSuccess } = todoComplete;\r\n\r\n  const todoInComplete = useSelector((state) => state.todoInComplete);\r\n  const { success: incompleteSuccess } = todoInComplete;\r\n\r\n  const todoDelete = useSelector((state) => state.todoDelete);\r\n  const { success: deleteSuccess } = todoDelete;\r\n\r\n  const todoEdit = useSelector((state) => state.todoEdit);\r\n  const { success: editSuccess } = todoEdit;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    dispatch(getAllTodos());\r\n\r\n    if (successAddTodo) {\r\n      setTitle('');\r\n      setDesc('');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    userInfo,\r\n    history,\r\n    successAddTodo,\r\n    completeSuccess,\r\n    incompleteSuccess,\r\n    deleteSuccess,\r\n    editSuccess,\r\n  ]);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logoutUser());\r\n  };\r\n\r\n  const addTodoHandler = () => {\r\n    dispatch(addNewTodo(title, desc));\r\n  };\r\n\r\n  const completeHandler = (id) => {\r\n    dispatch(completeTodo(id));\r\n    // dispatch({ type: TODO_COMPLETE_RESET });\r\n  };\r\n\r\n  const incompleteHandler = (id) => {\r\n    dispatch(incompleteTodo(id));\r\n    dispatch({ type: TODO_INCOMPLETE_RESET });\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteTodo(id));\r\n    dispatch({ type: TODO_DELETE_RESET });\r\n  };\r\n\r\n  const editTodoHandler = () => {\r\n    dispatch(editTodo(todoId, updateTitle, updateDesc));\r\n    dispatch({ type: TODO_UPDATE_RESET });\r\n    setShow(false);\r\n  };\r\n\r\n  const findTodoItem = (id) => {\r\n    if (todos) {\r\n      todos.forEach((d) => {\r\n        if (d._id === id) {\r\n          setTodoId(d._id);\r\n          setupdateTitle(d.title);\r\n          setupdateDesc(d.description);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleShow = (id) => {\r\n    findTodoItem(id);\r\n    setShow(true);\r\n  };\r\n  const handleClose = () => setShow(false);\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"p-3\" style={{ backgroundColor: 'rgb(230 230 230)' }}>\r\n        <Col md={11}>\r\n          <h2>WelCome BacK! {userInfo && userInfo.email}</h2>\r\n        </Col>\r\n        <Col md={1}>\r\n          <Button variant=\"outline-danger\" onClick={logoutHandler}>\r\n            Logout\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"p-3\">\r\n        <Col md={3}>\r\n          <h3>Add To Do</h3>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter a title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                row={3}\r\n                placeholder=\"To Do description\"\r\n                value={desc}\r\n                onChange={(e) => setDesc(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button onClick={addTodoHandler} className=\"btn-block\">\r\n              ADD\r\n            </Button>\r\n          </Form>\r\n          {loadingAddTodo ? (\r\n            <Loader />\r\n          ) : (\r\n            errorAddTodo && <Alert variant=\"danger\">{errorAddTodo}</Alert>\r\n          )}\r\n        </Col>\r\n        <Col md={9}>\r\n          <h3>To Do List</h3>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ width: '20%' }} scope=\"col\">\r\n                  Title\r\n                </th>\r\n                <th style={{ width: '60%' }} scope=\"col\">\r\n                  Description\r\n                </th>\r\n                <th style={{ textAlign: 'center', width: '20%' }} scope=\"col\">\r\n                  Complete/Incomplete/Edit/Delete\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {todos &&\r\n                todos.map((todo) => (\r\n                  <tr key={todo._id}>\r\n                    {todo.done ? (\r\n                      <>\r\n                        <td style={{ color: '#ddd', width: '20%' }}>\r\n                          <strike>{todo.title}</strike>\r\n                        </td>\r\n\r\n                        <td style={{ color: '#ddd', width: '60%' }}>\r\n                          <strike>{todo.description} </strike>\r\n                        </td>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <td style={{ width: '20%' }}>{todo.title}</td>\r\n                        <td style={{ width: '60%' }}>{todo.description}</td>\r\n                      </>\r\n                    )}\r\n                    <td style={{ textAlign: 'center', width: '20%' }}>\r\n                      <Button\r\n                        onClick={() => completeHandler(todo._id && todo._id)}\r\n                        className=\"mr-1\"\r\n                        variant=\"outline-success\"\r\n                        disabled={todo.done && true}\r\n                      >\r\n                        <i className=\"fas fa-check\"></i>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"mr-1\"\r\n                        disabled={!todo.done && true}\r\n                        onClick={() => incompleteHandler(todo._id)}\r\n                        variant=\"outline-secondary\"\r\n                      >\r\n                        <i className=\"fas fa-times\"></i>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"mr-1\"\r\n                        onClick={() => handleShow(todo._id)}\r\n                        variant=\"outline-info\"\r\n                      >\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => deleteHandler(todo._id)}\r\n                        variant=\"outline-danger\"\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n          {loadingItems ? (\r\n            <Loader />\r\n          ) : (\r\n            errorItems && <Alert variant=\"danger\">{errorItems}</Alert>\r\n          )}\r\n          {todos && todos.length === 0 && (\r\n            <Alert variant=\"danger\">\r\n              <i className=\"fas fa-exclamation-triangle\"></i> No Items!\r\n            </Alert>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Modal show={show} onHide={handleClose} animation={false} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update To Do</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter a title\"\r\n                value={updateTitle}\r\n                onChange={(e) => setupdateTitle(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                row={3}\r\n                placeholder=\"To Do description\"\r\n                value={updateDesc}\r\n                onChange={(e) => setupdateDesc(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={editTodoHandler} className=\"btn-block\">\r\n            UPDATE\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","// import axios from 'axios';\r\nimport {\r\n  GET_ALL_TODOS_REQUEST,\r\n  GET_ALL_TODOS_SUCCESS,\r\n  GET_ALL_TODOS_FAIL,\r\n  ADD_NEW_TODO_REQUEST,\r\n  ADD_NEW_TODO_SUCCESS,\r\n  ADD_NEW_TODO_FAIL,\r\n  TODO_COMPLETE_FAIL,\r\n  TODO_INCOMPLETE_FAIL,\r\n  TODO_DELETE,\r\n  TODO_DELETE_FAIL,\r\n  TODO_UPDATE_REQUEST,\r\n  TODO_UPDATE_SUCCESS,\r\n  TODO_UPDATE_FAIL,\r\n  TODO_COMPLETE_REQUEST,\r\n  TODO_COMPLETE_SUCCESS,\r\n  TODO_INCOMPLETE_REQUEST,\r\n  TODO_INCOMPLETE_SUCCESS,\r\n} from '../constants/todoConstant';\r\nimport { baseURL } from '../shared/baseURL';\r\nimport {axiosInstance} from '../config';\r\n\r\nexport const getAllTodos = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_ALL_TODOS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axiosInstance.get(`/api/todos`, config);\r\n\r\n    dispatch({\r\n      type: GET_ALL_TODOS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ALL_TODOS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addNewTodo = (title, description) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ADD_NEW_TODO_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axiosInstance.post(\r\n      `/api/todos`,\r\n      { title, description },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_NEW_TODO_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_NEW_TODO_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const completeTodo = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TODO_COMPLETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    await fetch(`${baseURL}/api/todos/${id}/complete`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: TODO_COMPLETE_SUCCESS,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n\r\n    /*  await axios.put(`${baseURL}/api/todos/${id}/complete`, config); \r\n    dispatch({\r\n      type: TODO_COMPLETE_SUCCESS,\r\n    }); */\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_COMPLETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const incompleteTodo = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TODO_INCOMPLETE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n  \r\n    await fetch(`${baseURL}/api/todos/${id}/incomplete`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: TODO_INCOMPLETE_SUCCESS,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        throw err;\r\n      });\r\n  /*   await axios.patch(`${baseURL}/api/todos/${id}/incomplete`, config);\r\n    dispatch({\r\n      type: TODO_INCOMPLETE_SUCCESS,\r\n    }); */\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_INCOMPLETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTodo = (id) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axiosInstance.delete(`/api/todos/${id}`, config);\r\n\r\n    dispatch({\r\n      type: TODO_DELETE,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const editTodo = (id, title, description) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: TODO_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axiosInstance.put(\r\n      `${baseURL}/api/todos/${id}`,\r\n      { title, description },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: TODO_UPDATE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { getResetPasswordLink } from '../actions/userAction';\r\nimport Loader from './loader';\r\n\r\nconst ForgotPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n\r\n  const passResetLink = useSelector((state) => state.passResetLink);\r\n  const { loading, error, message } = passResetLink;\r\n\r\n  useEffect(() => {}, [dispatch]);\r\n\r\n  const getPasswordResetLinkHandler = () => {\r\n    if (email) {\r\n      dispatch(getResetPasswordLink(email));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-5 justify-content-center\">\r\n        <Col md={4} className=\"m-3 p-3\" style={{ border: '1px solid #ddd' }}>\r\n          <Form>\r\n            <h2>Recover Password</h2>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter your registered email address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button\r\n              onClick={getPasswordResetLinkHandler}\r\n              className=\"btn-block btn-warning\"\r\n            >\r\n              Get Reset Link\r\n            </Button>\r\n          </Form>\r\n          <LinkContainer className=\"mt-3\" to=\"/login\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-block\"\r\n              variant=\"outline-secondary\"\r\n            >\r\n              Back to Login\r\n            </Button>\r\n          </LinkContainer>\r\n          <Row className=\"mt-3\">\r\n            <Col>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Alert variant=\"danger\">\r\n                  <i className=\"fas fa-exclamation-triangle\"></i>\r\n                  {error}\r\n                </Alert>\r\n              ) : (\r\n                message && <Alert variant=\"success\">{message}</Alert>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { loginUser } from '../actions/userAction';\r\nimport Loader from './loader';\r\n\r\nconst Login = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, success, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/dash');\r\n    }\r\n  }, [dispatch, success, userInfo, history]);\r\n\r\n  const loginHandler = () => {\r\n    dispatch(loginUser(email, password));\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-5 justify-content-center\">\r\n        <Col md={4} className=\"m-3 p-3\" style={{ border: '1px solid #ddd' }}>\r\n          <Form>\r\n            <h2>Login</h2>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                type=\"email\"\r\n                placeholder=\"demo@example.com\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button onClick={loginHandler} className=\"btn-block btn-warning\">\r\n              Login\r\n            </Button>\r\n          </Form>\r\n          <LinkContainer className=\"mt-3\" to=\"/forgot-password\">\r\n            <Button className=\"btn-block\" variant=\"outline-secondary\">\r\n              Forgot Password?\r\n            </Button>\r\n          </LinkContainer>\r\n          <LinkContainer className=\"mt-3\" to=\"/register\">\r\n            <Button className=\"btn-block\" variant=\"outline-secondary\">\r\n              Don't have account? Register now!\r\n            </Button>\r\n          </LinkContainer>\r\n          <Row className=\"mt-3\">\r\n            <Col>\r\n              {loading && <Loader />}\r\n              {error && (\r\n                <Alert variant=\"danger\">\r\n                  <i className=\"fas fa-exclamation-triangle\"></i>\r\n                  {` `+error}\r\n                </Alert>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { registerUser } from '../actions/userAction';\r\nimport Loader from './loader';\r\n\r\nconst Register = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, success, message } = userRegister;\r\n\r\n  useEffect(() => {}, [success]);\r\n\r\n  const registerHandler = () => {\r\n    dispatch(registerUser(email, password));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-5 justify-content-center\">\r\n        <Col md={4} className=\"m-3 p-3\" style={{border: '1px solid #ddd'}}>\r\n          <Form>\r\n            <h2>Register</h2>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter your email address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Choose password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button onClick={registerHandler} className=\"btn-block btn-warning\">\r\n              Register\r\n            </Button>\r\n          </Form>\r\n          <LinkContainer className=\"mt-3\" to=\"/login\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-block\"\r\n              variant=\"outline-secondary\"\r\n            >\r\n              Login\r\n            </Button>\r\n          </LinkContainer>\r\n          <Row className=\"mt-3\">\r\n            <Col>\r\n              {loading && <Loader />}\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              {success && <Alert variant=\"success\">{message}</Alert>}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport CreateNewPassword from './components/createNewPassword';\r\nimport Dashboard from './components/dashboard';\r\nimport ForgotPassword from './components/forgotpassword';\r\nimport Login from './components/login';\r\nimport Register from './components/register';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Route path=\"/\" exact component={Login} />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" component={Register} />\r\n      <Route path=\"/dash\" component={Dashboard} />\r\n      <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n      <Route path=\"/createNewPassword/:token\" component={CreateNewPassword} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  passResetLinkReducer,\r\n  passResetReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n} from './reducer/userReducer';\r\nimport {\r\n  addTodoItemReducer,\r\n  todoCompleteReducer,\r\n  todoDeleteReducer,\r\n  todoEditReducer,\r\n  todoInCompleteReducer,\r\n  todoItemsReducer,\r\n} from './reducer/todoReducer';\r\n\r\nconst initialState = {\r\n  userLogin: {\r\n    userInfo: localStorage.getItem('userInfo')\r\n      ? JSON.parse(localStorage.getItem('userInfo'))\r\n      : null,\r\n  },\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  userRegister: userRegisterReducer,\r\n  userLogin: userLoginReducer,\r\n  passResetLink: passResetLinkReducer,\r\n  passReset: passResetReducer,\r\n  todoItems: todoItemsReducer,\r\n  addTodoItem: addTodoItemReducer,\r\n  todoComplete: todoCompleteReducer,\r\n  todoInComplete: todoInCompleteReducer,\r\n  todoDelete: todoDeleteReducer,\r\n  todoEdit: todoEditReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGOUT,\r\n  PASSWORD_RESET_LINK_REQUEST,\r\n  PASSWORD_RESET_LINK_SUCCESS,\r\n  PASSWORD_RESET_LINK_FAIL,\r\n  PASSWORD_RESET_LINK_RESET,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n  RESET_PASSWORD_RESET,\r\n  RESET_PASSWORD_REQUEST,\r\n} from '../constants/userConstanst';\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, success: true, message: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_REGISTER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const passResetLinkReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PASSWORD_RESET_LINK_REQUEST:\r\n      return { loading: true };\r\n    case PASSWORD_RESET_LINK_SUCCESS:\r\n      return { loading: false, message: action.payload };\r\n    case PASSWORD_RESET_LINK_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PASSWORD_RESET_LINK_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const passResetReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case RESET_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case RESET_PASSWORD_SUCCESS:\r\n      return { loading: false, message: action.payload };\r\n    case RESET_PASSWORD_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case RESET_PASSWORD_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_ALL_TODOS_REQUEST,\r\n  GET_ALL_TODOS_SUCCESS,\r\n  GET_ALL_TODOS_FAIL,\r\n  ADD_NEW_TODO_REQUEST,\r\n  ADD_NEW_TODO_SUCCESS,\r\n  ADD_NEW_TODO_FAIL,\r\n  TODO_COMPLETE_FAIL,\r\n  TODO_INCOMPLETE_FAIL,\r\n  TODO_DELETE,\r\n  TODO_DELETE_FAIL,\r\n  TODO_COMPLETE_RESET,\r\n  TODO_INCOMPLETE_RESET,\r\n  TODO_DELETE_RESET,\r\n  TODO_UPDATE_REQUEST,\r\n  TODO_UPDATE_SUCCESS,\r\n  TODO_UPDATE_FAIL,\r\n  TODO_UPDATE_RESET,\r\n  TODO_COMPLETE_SUCCESS,\r\n  TODO_COMPLETE_REQUEST,\r\n  TODO_INCOMPLETE_REQUEST,\r\n  TODO_INCOMPLETE_SUCCESS,\r\n} from '../constants/todoConstant';\r\n\r\nexport const todoItemsReducer = (state = { todos: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_TODOS_REQUEST:\r\n      return { loading: true };\r\n    case GET_ALL_TODOS_SUCCESS:\r\n      return { loading: false, todos: action.payload };\r\n    case GET_ALL_TODOS_FAIL:\r\n      return { loading: true, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addTodoItemReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADD_NEW_TODO_REQUEST:\r\n      return { loading: true };\r\n    case ADD_NEW_TODO_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ADD_NEW_TODO_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const todoCompleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TODO_COMPLETE_REQUEST:\r\n      return { loading: true };\r\n    case TODO_COMPLETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case TODO_COMPLETE_FAIL:\r\n      return { error: action.payload };\r\n    case TODO_COMPLETE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const todoInCompleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TODO_INCOMPLETE_REQUEST:\r\n      return { loading: true };\r\n    case TODO_INCOMPLETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case TODO_INCOMPLETE_FAIL:\r\n      return { error: action.payload };\r\n    case TODO_INCOMPLETE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const todoDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TODO_DELETE:\r\n      return { success: true };\r\n    case TODO_DELETE_FAIL:\r\n      return { error: action.payload };\r\n    case TODO_DELETE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const todoEditReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TODO_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case TODO_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case TODO_UPDATE_FAIL:\r\n      return { error: action.payload };\r\n    case TODO_UPDATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './bootstrap.min.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}